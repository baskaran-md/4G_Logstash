input {
  tcp {
    port => 5000
    type => microkernel_log
  }
  udp {
    port => 5000
    type => microkernel_log
  }
}

filter {

  if [type] == "microkernel_log" {

    multiline {
       patterns_dir => "./patterns"
       pattern => "^%{4G_DATESTAMP}"
       negate => true
       what => previous
    }

    grok {
      patterns_dir => "./patterns"
      match => [
        #Parsing Raw Logs
        "message", "(?m)%{4G_DATESTAMP:timestamp}(%{SPACE}org:%{WORD:organization})?(%{SPACE}env:%{WORD:environment})?(%{SPACE}api:%{WORD:apiproxy})?(%{SPACE}rev:%{INT:revision})?(%{SPACE}policy:%{WORD:policy})?%{SPACE}%{DATA:thread}(%{SPACE}-%{SPACE}%{URIPATHPARAM:request})?%{SPACE}%{4G_LOGLEVEL:loglevel}(%{SPACE}%{NOTSPACE:logger})?%{SPACE}(-)?%{SPACE}%{GREEDYDATA:4glogs}",

        #Catch All
        "message", "(?m)%{4G_DATESTAMP:timestamp}%{SPACE}%{GREEDYDATA:4glogs}"

      ]
      overwrite => [ "message" ]
    }
  }

  date {
     match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
     timezone => "Etc/GMT+4"
  }

  if "multiline" in [tags] {
    mutate {
      replace => [ "tags", "stacktrace" ]
    }
  }
}

output {
  elasticsearch { host => localhost }
  stdout { codec => rubydebug }
}
